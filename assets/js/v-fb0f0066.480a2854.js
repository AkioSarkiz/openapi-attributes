"use strict";(self.webpackChunkopenapi_attributes=self.webpackChunkopenapi_attributes||[]).push([[170],{4:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-fb0f0066",path:"/guide/getting-started.html",title:"Getting started",lang:"en-US",frontmatter:{lang:"en-US",title:"Getting started"},excerpt:"",headers:[],filePathRelative:"guide/getting-started.md",git:{updatedTime:1633893246e3,contributors:[{name:"AkioSarkiz",email:"akiosarkiz@gmail.com",commits:3}]}}},819:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(252).uE)('<h4 id="_1-step-installation" tabindex="-1"><a class="header-anchor" href="#_1-step-installation" aria-hidden="true">#</a> 1 step: installation</h4><p>via composer</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> require akiosarkiz/openpapi-attributes\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_2-step-use-attributes" tabindex="-1"><a class="header-anchor" href="#_2-step-use-attributes" aria-hidden="true">#</a> 2 step: use attributes</h4><p>Write documentation for your code. For example, simple controller:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">OpenApiGenerator<span class="token punctuation">\\</span>Attributes<span class="token punctuation">\\</span>Info</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">OpenApiGenerator<span class="token punctuation">\\</span>Attributes<span class="token punctuation">\\</span>Property<span class="token punctuation">\\</span>Number</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">OpenApiGenerator<span class="token punctuation">\\</span>Attributes<span class="token punctuation">\\</span>Response</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">OpenApiGenerator<span class="token punctuation">\\</span>Attributes<span class="token punctuation">\\</span>Route<span class="token punctuation">\\</span>Get</span><span class="token punctuation">;</span>\n\n#<span class="token punctuation">[</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Some title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// must exists one attribute info in project</span>\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">SimpleController</span> \n<span class="token punctuation">{</span>\n    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content">\n        <span class="token attribute-class-name class-name">Get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users/{id}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token attribute-class-name class-name">Number</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token attribute-class-name class-name">Response</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>\n    </span><span class="token delimiter punctuation">]</span></span>    \n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">//</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="_3-step-create-script-run" tabindex="-1"><a class="header-anchor" href="#_3-step-create-script-run" aria-hidden="true">#</a> 3 step: create script &amp; run</h4><p>Run script.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php ./vendor/bin/generate-openapi.php ./tests/Examples/Controller/ <span class="token builtin class-name">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><hr>',10),t={render:function(n,s){return e}}}}]);