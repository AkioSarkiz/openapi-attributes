"use strict";(self.webpackChunkopenapi_attributes=self.webpackChunkopenapi_attributes||[]).push([[260],{843:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-122ee2c0",path:"/schemas.html",title:"Definition schemas",lang:"en-US",frontmatter:{lang:"en-US",title:"Definition schemas"},excerpt:"",headers:[{level:3,title:"Generation schemas",slug:"generation-schemas",children:[]}],filePathRelative:"schemas.md",git:{updatedTime:1633893246e3,contributors:[{name:"AkioSarkiz",email:"akiosarkiz@gmail.com",commits:3}]}}},715:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var e=a(252);const t=(0,e._)("h3",{id:"generation-schemas",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#generation-schemas","aria-hidden":"true"},"#"),(0,e.Uk)(" Generation schemas")],-1),p=(0,e.Uk)("Package supported schemas openapi. For more details about schema see "),c={href:"https://swagger.io/specification/#schema-object",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("documentation"),o=(0,e.Uk)("."),i=(0,e.uE)('<h4 id="base-example" tabindex="-1"><a class="header-anchor" href="#base-example" aria-hidden="true">#</a> Base example</h4><p>For base schema need define properties attributes. This can be a bit tedious, but it gives you full control over your schema. An alternative approach is to use ModelSchema.</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">OpenApiGenerator<span class="token punctuation">\\</span>Attributes<span class="token punctuation">\\</span>Property<span class="token punctuation">\\</span>Str</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">OpenApiGenerator<span class="token punctuation">\\</span>Attributes<span class="token punctuation">\\</span>Property<span class="token punctuation">\\</span>Number</span><span class="token punctuation">;</span>\n\n<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content">\n    <span class="token attribute-class-name class-name">Info</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token attribute-class-name class-name">Schema</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;personalDataSchema&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token attribute-class-name class-name">Str</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token attribute-class-name class-name">Str</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;phone&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token attribute-class-name class-name">Number</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n</span><span class="token delimiter punctuation">]</span></span>\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">SimpleSchema</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="model-schema" tabindex="-1"><a class="header-anchor" href="#model-schema" aria-hidden="true">#</a> Model Schema</h4><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">OpenApiGenerator<span class="token punctuation">\\</span>Attributes<span class="token punctuation">\\</span>Property<span class="token punctuation">\\</span>Number</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">OpenApiGenerator<span class="token punctuation">\\</span>Attributes<span class="token punctuation">\\</span>Schema<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>\n\n#<span class="token punctuation">[</span><span class="token function">Schema</span><span class="token punctuation">(</span>model<span class="token punctuation">:</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token comment">// or</span>\n<span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">Model</span></span><span class="token delimiter punctuation">]</span></span>\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">SchemaModel</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$title</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword type-declaration">bool</span> <span class="token variable">$is_banned</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword type-declaration">float</span> <span class="token variable">$price</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// property can override type, name, format and add new info.</span>\n    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">Property</span><span class="token punctuation">(</span>\n        <span class="token attribute-class-name class-name">description</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;The age of person&#39;</span><span class="token punctuation">,</span>\n        <span class="token attribute-class-name class-name">example</span><span class="token punctuation">:</span> <span class="token number">123</span><span class="token punctuation">,</span>\n        <span class="token attribute-class-name class-name">format</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;int32&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>\n    <span class="token keyword">public</span> <span class="token keyword type-declaration">int</span> <span class="token variable">$age</span><span class="token punctuation">;</span>\n    \n    <span class="token comment">// or</span>\n    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">Number</span><span class="token punctuation">(</span>\n        <span class="token attribute-class-name class-name">description</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;The age of person&#39;</span><span class="token punctuation">,</span>\n        <span class="token attribute-class-name class-name">example</span><span class="token punctuation">:</span> <span class="token number">123</span><span class="token punctuation">,</span>\n        <span class="token attribute-class-name class-name">format</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;int32&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>\n    <span class="token keyword">public</span> <span class="token variable">$ageAlt</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>',5),r={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[p,(0,e._)("a",c,[l,(0,e.Wm)(a)]),o]),i],64)}}}}]);